<?xml version="1.0" encoding="UTF-8"?>
<!--
    Use this script with 'ant -f build.xml' or simply 'ant'.
-->
<project name="JCloudApp" default="default" basedir="."
    xmlns:ivy="antlib:org.apache.ivy.ant">
    <description>Builds the project JCloudApp</description>

    <fail message="Please build using Ant 1.7.1 or higher.">
        <condition>
            <not>
                <antversion atleast="1.7.1"/>
            </not>
        </condition>
    </fail>
    
    <target name="default" depends="build" description="Builds the whole project"/>

    <target name="init">
        <property name="build.dir" value="bin"/>
        <property name="dist.dir" value="dist"/>
        <property name="dist.pass1.dir" value="${dist.dir}/pass1"/>
        <property name="misc.dir" value="misc"/>
        <property name="lib.dir" value="libs"/>
        <property name="src.dir" value="src"/>
        
        <property name="jcloudapp.version" value="0.9.1"/>

        <path id="classpath">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </path>
    </target>

    <target name="resolve" depends="init" description="Retrieve dependencies">
        <mkdir dir="${lib.dir}"/>
        
        <ivy:retrieve pattern="${lib.dir}/[artifact]-[revision]-[type].[ext]"/>
    </target>

    <target name="report" depends="init,resolve" description="Dependency report">
        <ivy:report xsl="true"
                outputpattern="[organisation]-[module]-[conf]-report.[ext]"
                conf="default"
                organisation="de.jcloudapp"
                module="jcloudapp"/>
    </target>
    
    <target name="build" depends="init,clean" description="Builds application">
        <mkdir dir="${build.dir}"/>

        <javac srcdir="${src.dir}"
               destdir="${build.dir}"
               debug="false"
               deprecation="true"
               optimize="true"
               includeAntRuntime="false">
            <classpath refid="classpath"/>
        </javac>

        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <!-- ignore source code -->
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    
    <target name="dist" depends="init,build" description="Package application">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.pass1.dir}"/>
        
        <!--
            manifestclasspath uses the given jarfile to determine relative pathes
            to the inner <classpath>, therefore we pass in a dummy.jar to obtain
            pathes in the form "libs/foo.jar"
            (http://www.rgagnon.com/javadetails/java-0587.html)
        -->
        <manifestclasspath property="manifest.class-path" jarfile="dummy.jar" maxParentLevels="0">
            <classpath refid="classpath"/>
        </manifestclasspath>
        
        
        <jar jarfile="${dist.pass1.dir}/jcloudapp.jar" compress="false" strict="warn">
            <fileset dir="${build.dir}"/>
            <manifest>
                <attribute name="Main-Class" value="de.jcloudapp.Main"/>
                <attribute name="Class-Path" value="${manifest.class-path}"/>
                
                <attribute name="Implementation-Vendor" value="Christian Nicolai &lt;chrnicolai@gmail.com&gt;"/>
                <attribute name="Implementation-Title" value="JCloudApp"/>
                <attribute name="Implementation-Version" value="${jcloudapp.version}"/>
            </manifest>
        </jar>
        
        <zip destfile="${dist.dir}/jcloudapp-${jcloudapp.version}.zip" duplicate="fail" compress="false">
            <!-- wrap into a subfolder for easier extraction -->
            <mappedresources>
                <union>
                    <!-- include everything from 1th pass -->
                    <fileset dir="${dist.pass1.dir}"/>
                    <!-- pull in all libs (without sources!) -->
                    <fileset dir="${basedir}">
                        <include name="${lib.dir}/**"/>
                        <exclude name="${lib.dir}/**-source.jar"/>
                    </fileset>
                    <!-- some misc files -->
                    <fileset dir="${misc.dir}">
                        <include name="launch.bat"/>
                        <include name="launch.sh"/>
                        <include name="3rd-party/**"/>
                    </fileset>
                </union>
                <globmapper from="*" to="jcloudapp/*"/>
            </mappedresources>
        </zip>
    </target>
    
    <target name="clean" depends="init" description="Removes build files">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>
</project>
